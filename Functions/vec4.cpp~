// vec4.cpp


#include <iostream>
#include "vec4.h"
#include "mat4.h"
using namespace std;

vec4 :: vec4(float nA1, float nA2, float nA3, float nA4) {
	array[0] = nA1;
	array[1] = nA2;
	array[2] = nA3;
	array[3] = nA4;
}
	
const vec4& vec4 :: operator=(const vec4& other) {
	for(int i = 0; i < 4; i++)
		array[i] = other.array[i];

	return *this;
}

float& vec4 :: operator[](const int index) {
	return array[index];
}
	
vec& vec4 :: operator*=(const mat4& other) {
	float oldValues[4];
	for(int i = 0; i < 4; i++)
		oldValues[i] = array[i];

	float v;
	for(int c = 0; c < 4; c++) {
		v = 0;
		for(int i = 0; i < 4; i++)
			v += oldValues[c]*other.array[i][c];
		array[c] = v;
	}

	return *this;
}
	
void vec4 :: getArray(float out[4]) {
	for(int i = 0; i < 4; i++)
		out[i] = array[i];
}
